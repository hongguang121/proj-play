(define w2 (road (safe (comp-unsafe (list '(0 0))) 1) (list '(0 0))))
> (define s2 (safe (comp-unsafe '((0 0))) 2))
> (define m2 (memory s2 (memory (safe (unsafe '(0 0)) 1) '())))
> (define s3 (safe (comp-unsafe w2) 3))
> (define w3 (road (safe (comp-unsafe w2) 3) w2)) 
> (define m3 (memory s3 m2))
> (define s4 (safe (comp-unsafe w3) 4))
> (define w4 (road (safe (comp-unsafe w3) 4) w3)) 
> (define m4 (memory s4 m3))
> (define s5 (safe (comp-unsafe w4) 5))
> (define m5 (memory s5 m4))
> (define w5 (road (safe (comp-unsafe w4) 5) w4)) 
> (define s6 (safe (comp-unsafe w5) 6))
> (define m6 (memory s6 m5))
> (define w6 (road (safe (comp-unsafe w5) 6) w5)) 