#lang racket

(require web-server/servlet
         web-server/servlet-env
         web-server/formlets)
(require "words.rkt")

(provide/contract (start (request? . -> . response?)))

(define (start request)
  (render-words-page "" request))

(define new-word-formlet
  (formlet
   (#%# ,{input-string . => . spell})
   (values spell)))

(define (render-words-page res request)
  (define (response-generator embed/url)
    (response/xexpr
     `(html (head (title "My words"))
            (body (h1 "My words list")
                  ;,(render-words a-list)
                  (form ((action
                          ,(embed/url parse-word))
                         (method "post"))
                        "查询： "
                        ,@(formlet-display new-word-formlet)
                        ;(input ((name "spell")))
                        " "
                        (input ((type "submit"))))
                  (br)
                  "录入文章： "
                  (form ((action
                          ,(embed/url translate)))                        
                        (textarea ((name "article")
                                   (style "width:300px;height:300px;")))
                        " "(input ((type "submit"))))
                  (br)
                  ,res)
                  )))
  (define (parse-word request)
    (let ((word (formlet-process new-word-formlet request)))
           ;(extract-binding/single 'spell (request-bindings request))))
      (if (string=? word "")
          (render-words-page '(p "请输入单词") (redirect/get))
          (let ((res (render-res (search-w word)))) ;注意，通过数据库查找可以实时更新
            (render-words-page (append '(p "查询结果：") (list res)) (redirect/get))))))
  (define (translate request)
    (let ((art (extract-binding/single 'article (request-bindings request))))
      (if (string=? art "")
          (render-words-page '(p "请录入文章") (redirect/get))
          (let ((res (dsp (analyse art))))
            (render-words-page res (redirect/get))))))  
  (send/suspend/dispatch response-generator))

(define (render-word a-word)
  `(div ((class "word"))
        (table ((border="1"))
         (tr
         (td ,(word-spell a-word))
         (td (p ,(word-mean a-word)))))))

(define (render-words a-list)
  `(div ((class "words"))
        ,@(map render-word (vocabulary-words a-list))))

(define (render-find a-list)
  `(div ((class "find"))
        (p ,(vector-ref a-list 0));,(car a-list))
        (p "释义：" ,(vector-ref a-list 1))));,(cadr a-list))))

(define (render-res lst)
  `(div ((class "result"))
        ,@(map render-find lst)))

(serve/servlet start
               #:launch-browser? #f
               #:quit? #f
               #:listen-ip #f
               #:port 8100
               #:extra-files-paths (list "e:\\source\\web")
               #:servlet-path "/"
               #:command-line? #f
               #:stateless? #f)
